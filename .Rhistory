swirl()
1
2 / 1
2/2.5
15
qt(.95,15)
dim(fs)
t.test(fs$sheight - fs$fheight)
11.7885 * sd(fs$sheight - fs$fheight)/sqrt(1078)
mybin
.03515625
mybin[7]
mybin[8]
8
t.test(fs$sheight - fs$fheight)
pt(2.5, 15, lower.tail = FALSE)
choose(8, 7) * .5 ^ 8 + choose(8, 8) * .5 ^ 8
pbinom(6, size = 8, prob = .5, lower.tail = FALSE)
ppois(9, 5, lower.tail = FALSE)
swirl()
pt(2.5,df=15,lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2,lower.tail=F)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,size=8,prob=0.5,lower.tail=FALSE)
pbinom(7,size=8,prob=0.5,lower.tail=TRUE)
ppois(9,lambda=5,lower.tail=FALSE)
1100 + c(-1,1) * qt(.975,df=8) * 30/3
0 + 2 * 3/qt(.975,df=8)
3 -5 + c(-1,1) * qt(.95,df=18) * 1
ps <- sqrt((9*.6) + (9*.68)/18)
3 -5 + c(-1,1) * qt(.95,df=18) * ps * (1/10 + 1/10)^.5
3 -5 + c(-1,1) * qt(.975,df=18) * ps * (1/10 + 1/10)^.5
ps <- sqrt(((10 - 1) * .6 + (10 - 1) * .68)/(10 +10 - 2))
ps
ps <- sqrt(((10 - 1) * .6 + (10 - 1) * .68)/(10 +10 - 2))
3 -5 + c(-1,1) * qt(.975,df=18) * ps * (1/10 + 1/10)^.5
ps <- sqrt(((100 - 1) * .5^2 + (100 - 1) * 4)/(100 +100 - 2))
ps
4 - 6 + c(-1,1) * qnorm(.975) * ps * (.2)^.5
6 - 4 + c(-1,1) * qnorm(.975) * ps * (.2)^.5
4 - 6 + c(-1,1) * qnorm(.975) * ps * (.2)^.5
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma / sqrt(n), mean = mua, sd = sigma / sqrt(n),
lower.tail = FALSE)
mu0 = 30; mua = 32; sigma = 4; n = 16
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma / sqrt(n), mean = mu0, sd = sigma / sqrt(n),
lower.tail = FALSE)
pnorm(mu0 + z * sigma / sqrt(n), mean = mua, sd = sigma / sqrt(n),
lower.tail = FALSE)
library(ggplot2)
nseq = c(8, 16, 32, 64, 128)
mua = seq(30, 35, by = 0.1)
z = qnorm(.95)
power = sapply(nseq, function(n)
pnorm(mu0 + z * sigma / sqrt(n), mean = mua, sd = sigma / sqrt(n),
lower.tail = FALSE)
)
colnames(power) <- paste("n", nseq, sep = "")
d <- data.frame(mua, power)
library(reshape2)
d2 <- melt(d, id.vars = "mua")
names(d2) <- c("mua", "n", "power")
g <- ggplot(d2,
aes(x = mua, y = power, col = n)) + geom_line(size = 2)
g
library(manipulate)
mu0 = 30
myplot <- function(sigma, mua, n, alpha){
g = ggplot(data.frame(mu = c(27, 36)), aes(x = mu))
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean = mu0, sd = sigma / sqrt(n)),
size = 2, col = "red")
g = g + stat_function(fun=dnorm, geom = "line",
args = list(mean = mua, sd = sigma / sqrt(n)),
size = 2, col = "blue")
xitc = mu0 + qnorm(1 - alpha) * sigma / sqrt(n)
g = g + geom_vline(xintercept=xitc, size = 3)
g
}
manipulate(
myplot(sigma, mua, n, alpha),
sigma = slider(1, 10, step = 1, initial = 4),
mua = slider(30, 35, step = 1, initial = 32),
n = slider(1, 50, step = 1, initial = 16),
alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05)
)
)
manipulate(
myplot(sigma, mua, n, alpha),
sigma = slider(1, 10, step = 1, initial = 4),
mua = slider(30, 35, step = 1, initial = 32),
n = slider(1, 50, step = 1, initial = 16),
alpha = slider(0.01, 0.1, step = 0.01, initial = 0.05)
)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample",  alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample",  alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
?power.t.test
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")
power.t.test(n = 16, n=26, sd=200, type = "one.sample", alt = "one.sided")
power.t.test(n = 16, power=0.8, sd=200, type = "one.sample", alt = "one.sided")
power.t.test(n = 16, power=0.8, sd=4, type = "one.sample",  alt = "one.sided")$power
power.t.test(n = 16, power=0.8, sd=4, type = "one.sample",  alt = "one.sided")
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+\,mean=30,lower.tail=FALSE)
pnorm(30+z,mean=30,lower.tail=FALSE)
pnorm(30+z,mean=32,lower.tail=FALSE)
pnorm(30+z,mean=32,sd=1,lower.tail=FALSE)
pnorm(30+z*2,mean=32,sd=2,lower.tail=FALSE)
power.t.test(n=16,delta=2/4,sd=1,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=2,sd=4,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=100,sd=200,type="one.sample",alt="one.sided")$power
power.t.test(power=.8,delta=2/4,sd=1,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,delta=2,sd=4,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,delta=100,sd=200,type="one.sample",alt="one.sided")$n
power.t.test(power=.8,n=26,sd=1,type="one.sample",alt="one.sided")$delta
power.t.test(power=.8,n=27,sd=1,type="one.sample",alt="one.sided")$delta
set.seed(1010093)
pValues <- rep(NA,1000)
for(i in 1:1000){
y <- rnorm(20)
x <- rnorm(20)
pValues[i] <- summary(lm(y ~ x))$coeff[2,4]
}
# Controls false positive rate
sum(pValues < 0.05)
# Controls FWER
sum(p.adjust(pValues,method="bonferroni") < 0.05)
# Controls FDR
sum(p.adjust(pValues,method="BH") < 0.05)
?p.adjust
set.seed(1010093)
pValues <- rep(NA,1000)
for(i in 1:1000){
x <- rnorm(20)
# First 500 beta=0, last 500 beta=2
if(i <= 500){y <- rnorm(20)}else{ y <- rnorm(20,mean=2*x)}
pValues[i] <- summary(lm(y ~ x))$coeff[2,4]
}
trueStatus <- rep(c("zero","not zero"),each=500)
table(pValues < 0.05, trueStatus)
# Controls FWER
table(p.adjust(pValues,method="bonferroni") < 0.05,trueStatus)
# Controls FDR
table(p.adjust(pValues,method="BH") < 0.05,trueStatus)
par(mfrow=c(1,2))
plot(pValues,p.adjust(pValues,method="bonferroni"),pch=19)
plot(pValues,p.adjust(pValues,method="BH"),pch=19)
swirl()
head(pValues)
sum(pValues < 0.05)
sum(p.adjust(pValues,method="bonferroni"))
sum(p.adjust(pValues,method="bonferroni") < 0.05)
sum(p.adjust(pValues,method="BH") < 0.05)
tail(trueStatus)
table(pValues2<0.05,trueStatus)
5
24/500
table(p.adjust(pValues2,method="bonferroni"),trueValues)
table(p.adjust(pValues2,method="bonferroni"),trueStatus)
table(p.adjust(pValues2,method="bonferroni") < 0.05,trueStatus)
table(p.adjust(pValues2,method="BH") < 0.05,trueStatus)
library(ggplot2)
library(gridExtra)
nosim <- 1000
cfunc <- function(x, n) mean(x)
g1 = ggplot(data.frame(y = rep(1/6, 6), x = 1 : 6), aes(y = y, x = x))
g1 = g1 + geom_bar(stat = "identity", fill = "lightblue", colour = "black")
dat <- data.frame(x = apply(matrix(sample(1 : 6, nosim * 50, replace = TRUE),
nosim), 1, mean))
g2 <- ggplot(dat, aes(x = x)) + geom_histogram(binwidth=.2, colour = "black", fill = "salmon", aes(y = ..density..))
grid.arrange(g1, g2, ncol = 2)
grid.arrange(g1, g2, ncol = 2)
n = 50
B = 1000
## our data
x = sample(1 : 6, n, replace = TRUE)
## bootstrap resamples
resamples = matrix(sample(x,
n * B,
replace = TRUE),
B, n)
resampledMeans = apply(resamples, 1, mean)
g1 <- ggplot(as.data.frame(prop.table(table(x))), aes(x = x, y = Freq)) + geom_bar(colour = "black", fill = "lightblue", stat = "identity")
g2 <- ggplot(data.frame(x = resampledMeans), aes(x = x)) + geom_histogram(binwidth=.2, colour = "black", fill = "salmon", aes(y = ..density..))
grid.arrange(g1, g2, ncol = 2)
grid.arrange(g1, g2, ncol = 2)
library(UsingR)
data(father.son)
x <- father.son$sheight
n <- length(x)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
resampledMedians <- apply(resamples, 1, median)
resampledMedians
g = ggplot(data.frame(x = resampledMedians), aes(x = x))
g = g + geom_density(size = 2, fill = "red")
#g = g + geom_histogram(alpha = .20, binwidth=.3, colour = "black", fill = "blue", aes(y = ..density..))
g = g + geom_vline(xintercept = median(x), size = 2)
g
dim(father.son)
swirl()
sum(1:6)/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sg)
median(sh)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(sam, nrow = B, ncol=nh)
meds <- apply(resam, 1, median)
median(fh) - median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampleMedians, c(0.025,0.975))
quantile(resampledMedians, c(0.025,0.975))
quantile(meds, c(0.025,0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count - Cdata$count)
sample(group)
perms <- sapply(1:10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
teststat(DEcounts,group)
testStat(DEcounts,group)
perms <- sapply(1:10000, function(i) testStat(DEcounts,sample(group)))
library(bootstrap)
install.packages("bootstrap")
library(bootstrap)
B <- 10000
resamples <- matrix(sample(x,
n * B,
replace = TRUE),
B, n)
medians <- apply(resamples, 1, median)
sd(medians)
quantile(medians, c(.025, .975))
median(father.son$sheight)
foo <- quantile(medians, c(.025, .975))
mean(foo)
g = ggplot(data.frame(medians = medians), aes(x = medians))
g = g + geom_histogram(color = "black", fill = "lightblue", binwidth = 0.05)
g
?bootstrap
data(InsectSprays)
g = ggplot(InsectSprays, aes(spray, count, fill = spray))
g = g + geom_boxplot()
g
subdata <- InsectSprays[InsectSprays$spray %in% c("B", "C"),]
y <- subdata$count
group <- as.character(subdata$spray)
testStat <- function(w, g) mean(w[g == "B"]) - mean(w[g == "C"])
observedStat <- testStat(y, group)
permutations <- sapply(1 : 10000, function(i) testStat(y, sample(group)))
observedStat
mean(permutations > observedStat)
g = ggplot(data.frame(permutations = permutations),
aes(permutations))
g = g + geom_histogram(fill = "lightblue", color = "black", binwidth = 1)
g = g + geom_vline(xintercept = observedStat, size = 2)
g
setwd("~/Courses/Statistical Inference/project")
rm(list=ls())
choose(9,10)
choose(10,9) * .5^9 + choose(10,10) * .5^10
ppois(40, lambda=9*5)
(93 - 100) / 10
pnorm(-0.7)
pnorm(93,mean=100,sd=10)
qnorm(0.95,mean=100, sd=10)
qnorm(0.95,mean=100, sd=10/sqrt(50))
father.son
mean <- mean(father.son$fheight)
mean
mean + c(-1,1) * qnorm(0.975) * sd(father.son$fheight)/length(father.son$fheight)
x <- 10
t <- 60
lambda <- x/t
lambda + c(-1,1,) * qnorm(0.975) * sqrt(lambda/t)
lambda + c(-1,1) * qnorm(0.975) * sqrt(lambda/t)
mu <- 0.5
sigma <- sqrt(1/12)/10
sigma
pnorm(0.51, mean=mu, sd=sigma, lower.tail=FALSE)
mycars
mtcars
mpg <- mtcars$mpg
mu <- mean(mpg)
sigma <- sd(mpg)
mean
mu
sigma
t.test(mpg)$conf.int
n <- 9
sd <- 1
qt(0.975, 8) / 3
c4 <- mtcars$mpg[mtcars$cyl == 4]
c6 <- mtcars$mpg[mtcars$cyl == 6]
dim(c4)
length(c4)
length(c6)
t.test(c4,c6,var.equal=TRUE)
t.test(c4 - c6,var.equal=TRUE)
1.5 ^2 + 1.8^2
5.49 / 2
mu
n <- length(mpg)
sigma <- sd(mpg)
z <- qnorm(0.05)
mu + 1.645 * sigma / sqrt(n)
t.test(c4, c6)
pbinom(54, size=100, prob=0.5, lower.tail=FALSE)
ppois(15799, lambda=520*30,lower.tail=FALSE)
m1 <- 10
m2 <- 1
sp <- 4
se <- 4/sqrt(2/100)
se <- 4*sqrt(2/100)
z <- -1 / se
z
pnorm(z)
c8 <- mtcars$mpg[mtcars$cyl == 8]
t.test(c6,c8)
t.test(c6,c8,var.equal=FALSE)
t.test(c6,c8,var.equal=TRUE)
m6 <- mean(c6)
m6 <- mean(c8)
s6 <- sd(c6)
s8 <- sd(c8)
n6 <- length(c6)
n8 <- length(c8)
sp <- sqrt( ( (n6 - 1) * s6^2 + (n8-1) * s8^2)/(n6 + n8 - 2) )
sp
(m6 - m8) / (sp * sqrt(1 / n1 + 1 / n2))
m6 <- mean(c6)
m8 <- mean(c8)
(m6 - m8) / (sp * sqrt(1 / n1 + 1 / n2))
(m6 - m8) / (sp * sqrt(1 / n6 + 1 / n8))
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALS\
E)
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
mu0 = 30
mua = 32
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
sigma = 4
n = 16
alpha = 0.05
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
t.test
t.test(c4,c6,)
t.test(c4,c6)
pnorm(10.658, mean=11,sd=0.4, lower.tail=FALSE)
power.t.test(delta=0.01, alt="one.sided",sd=0.04)$n
power.t.test(delta=0.01, alt="one.sided",sd=0.04,power=.8)$n
subjects <- c(1,2,3,4,5)
baseline <- c(140,138,150,148,135)
week2 <- c(132,135,151,146,130)
data <- cbind(subjects,baseline,week2)
data <- data.frame(subjects,baseline,week2)
t.test(data$baseline, data$week2,alt="two.sided",paired=TRUE)
mu <= 1100
mu <- 1100
sigma <- 30
n <- 9
q <- 0.975
mu + c(-1,1) * qt(q,df=8) * sigma / 3
binom.test(3,4,alt="greater")
binom.test(4,3,alt="greater")
binom.test(3,4,alt="greater")
poisson.test(10,r= .01,T=1787,alt="less")
n <- 9
sd_t <- 1.5
sd_nt <- 1.8
mu_t <- -3
mu_nt <- 1
sp <- (((n - 1) * sd_t^2 + (n-1) * sd_nt^2)/(n+n-2))
pt((mu_t - mu_nt) / sp * (1/n + 1 /n)^.5,df=16)
-3 - 1
pt((mu_t - mu_nt) / (sp * (1/n + 1 /n)^.5),df=16)
mu <- .01
sd <- 0.04
p <- 0.9
p <- 0.05
pow <- 0.9
power.t.test(delta = mu, sd =sd, type="one.sample", alt="one.sided",sig.level=p)$n
power.t.test(delta = mu, sd =sd, type="one.sample", alt="one.sided",sig.level=p,power=pow)$n
knitr::opts_chunk$set(echo = TRUE)
n <- 40
simulations <- 1000
lambda <- 0.2
data <- matrix(rexp(n * simulations, lambda),nrow=simulations)
means <- apply(data,1,mean)
means
mean(means)
1/.2
class(means)
hist(means)
hist(means,col="steelblue")
set.seed(123455)
n <- 40
simulations <- 1000
lambda <- 0.2
data <- matrix(rexp(n * simulations, lambda),nrow=simulations)
means <- apply(data,1,mean)
hist(means,col="steelblue")
head(data)
sampleMean <- mean(means)
sampleMean
sd <- 1/lambda/sqrt(n)
var <- sd^2
var
sample_var <- var(means)
sample_var
hist(means,col="steelblue")
lines(density(means),col="red")
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red")
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
normal <- rnorm(length(means),mean(means),sd(means))
normal
normal <- rnorm(length(means),mean(means),sd(means))
lines(density(normal),col="blue",lwd=2)
normal <- rnorm(10000,mean(means),sd(means))
lines(density(normal),col="blue",lwd=2)
normal <- dnorm(10000,mean(means),sd(means))
lines(density(normal),col="blue",lwd=2)
normal <- rnorm(10000,mean(means),sd(means))
normal <- dnorm(10000,mean(means),sd(means))
normal
normal <- rnorm(10000,mean(means),sd(means))
lines(density(normal),col="blue",lwd=2)
hist(means,col="steelblue",freq=FALSE)
normal <- dnorm(10000,mean(means),sd(means))
normal
class(normal)
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(means, mean=mean(means), sd=sd(means)), add=TRUE)
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE)
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE,col="blue",lwd=2)
?abline
abline(v=sampleMean)
abline(v=sampleMean,lwd=2,col="red")
abline(v=sampleMean,lwd=4,col="red")
abline(v=5,lwd=2,col="blue")
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
abline(v=sampleMean,lwd=3,col="red")
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE,col="blue",lwd=2)
abline(v=5,lwd=2,col="blue")
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
abline(v=sampleMean,lwd=3,col="red")
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE,col="blue",lwd=2)
abline(v=5,lwd=2,col="blue")
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
abline(v=sampleMean,lwd=3,col="red")
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE,col="blue",lwd=2)
abline(v=5,lwd=2,col="blue")
?legend
legend("topright",legend=c("Sample","Normal"),col=c("red","blue"))
legend("topright",legend=c("Sample","Normal"),col=c("red","blue"),lwd=2)
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
abline(v=sampleMean,lwd=3,col="red")
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE,col="blue",lwd=2)
abline(v=5,lwd=2,col="blue")
legend("topright",legend=c("Sample","Normal"),col=c("red","blue"),lwd=2)
hist(means,col="steelblue",freq=FALSE)
lines(density(means),col="red",lwd=2)
abline(v=sampleMean,lwd=3,col="red")
normal <- rnorm(10000,mean(means),sd(means))
curve(dnorm(x, mean=mean(means), sd=sd(means)), add=TRUE,col="blue",lwd=2)
abline(v=5,lwd=2,col="blue")
legend("topright",legend=c("Sample","Normal"),col=c("red","blue"),lwd=2)
